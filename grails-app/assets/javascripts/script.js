$(document).ready(function() {	if($('.mainslider').length>0){		$('.mainslider-block').slick({			//autoplay: true,			//infinite: false,			dots: false,			arrows: true,			slidesToShow: 7,			variableWidth: true,			autoplaySpeed: 3000,			responsive: [				{				breakpoint: 768,					settings: {						centerMode: true,						slidesToScroll: 4					}				}			]		});	}	$('.tempoblockmob-element-title').click(function(event) {		$('.tempoblockmob-element-block').slideUp(300);		if($(this).parent().find('.tempoblockmob-element-block:visible').length==0){			$(this).parent().find('.tempoblockmob-element-block').slideDown(300);		}	});	$('.header-search__icon').click(function(event) {		$(this).hide();		$('.header-search').show();	});	function forms(){		$('input,textarea').focus(function(){				if($(this).hasClass('header-search-form__inp')){					$('.header-search').addClass('active');				}			if($(this).val() == $(this).attr('data-value')){					$(this).addClass('focus');				if($(this).attr('data-type')=='pass'){					$(this).attr('type','password');				};				$(this).val('');			};		});		$('input[data-value], textarea[data-value]').each(function() {			if (this.value == '' || this.value == $(this).attr('data-value')) {				this.value = $(this).attr('data-value');			}			$(this).click(function() {				if (this.value == $(this).attr('data-value')) {					if($(this).attr('data-type')=='pass'){						$(this).attr('type','password');					};					this.value = '';				};			});			$(this).blur(function() {				if (this.value == '') {					this.value = $(this).attr('data-value');						$(this).removeClass('focus');					if($(this).hasClass('header-search-form__inp')){						$('.header-search').removeClass('active');						$('.header-search-rezults').slideUp(300);					}					if($(this).attr('data-type')=='pass'){						$(this).attr('type','text');					};				};			});		});	}	forms();	if($('.knob').length) {		$(".knob").knob({			change : function(value){			//console.log("change : " + value);			},			release : function(value){			//console.log(this.$.attr('value'));			//console.log("release : " + value);			},			cancel : function(){			//console.log("cancel : ", this);			},			/*format : function (value) {					return value + '%';			},*/			draw : function () {				// "tron" case				if(this.$.data('skin') == 'tron') {					this.cursorExt = 0.3;					var a = this.arc(this.cv)// Arc						, pa // Previous arc						, r = 1;					this.g.lineWidth = this.lineWidth;					if (this.o.displayPrevious) {						pa = this.arc(this.v);						this.g.beginPath();						this.g.strokeStyle = this.pColor;						console.log(this.pColor);						this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, pa.s, pa.e, pa.d);						this.g.stroke();					}					this.g.beginPath();					this.g.strokeStyle = r ? this.o.fgColor : this.fgColor ;					this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d);					this.g.stroke();					this.g.lineWidth = 1;					this.g.beginPath();					this.g.strokeStyle = this.o.fgColor;					this.g.arc( this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2/3, 0, 2 * Math.PI, false);					this.g.stroke();					return false;				}			}		});	}    // quick search    $('.header-search-form__inp').on('keyup', function (e) {        if ([13, 38, 40].indexOf(e.keyCode) == -1) {            var key = $(this).val();            var $resultsHolder = $('.header-search-rezults');            if (key.length > 1) {                $.ajax({                    url: Conf.LOOKUP,                    type: 'POST',                    data: {                        cityName: key                    }                }).done(function (res) {                    $resultsHolder.html(res);                    $resultsHolder.show();                    if ($resultsHolder.children().length < 1) {                        $resultsHolder.hide();                    }                });                $resultsHolder.show();            } else {                $resultsHolder.hide();                $resultsHolder.html('');            }        }    });    var Graph = {        topBlocksOffset: 5,        botBlocksOffset: 5,        minOffsetBetweenDayAndNight: 5,        params: {            topBlocksOffset: 5,            marginBot: 5,            marginBetween: 5        },        setup: function() {            var $firstColumn = $('.tempoblock-column').first();            var graphHeight = $firstColumn.height() - $firstColumn.find('.tempoblock-data').height() - parseInt($firstColumn.find('.tempoblock-data').css('padding-top'))                - $firstColumn.find('.tempoblock-footer').height() - parseInt($firstColumn.find('.tempoblock-footer').css('bottom'));            var heightDayBlock = $('.tempoblock-element_day').first().height();            var heightNightBlock = $('.tempoblock-element_night').first().height();            // init values            var maxDayForecast = -100;            var minNightForecast = +100;            $('.graph .tempoblock-column').each(function() {                var dayMax = parseInt($(this).find('.maxDayTempC').text());                var nightMin = parseInt($(this).find('.minNightTempC').text());                if (maxDayForecast < dayMax) {                    maxDayForecast = dayMax;                }                if (minNightForecast > nightMin) {                    minNightForecast = nightMin;                }            });            var deltaDegree = maxDayForecast - minNightForecast;            var maxDeltaHeight = graphHeight - Graph.minOffsetBetweenDayAndNight - Graph.botBlocksOffset - heightDayBlock - heightNightBlock;            var degreeCoef = maxDeltaHeight / deltaDegree;            var baseMarginTop = $firstColumn.find('.tempoblock-data').height() + parseInt($firstColumn.find('.tempoblock-data').css('padding-top'));            // css top of the block with min night temperature            var minNightBlockTop = graphHeight - Graph.botBlocksOffset - heightNightBlock;            $('.graph .tempoblock-column').each(function() {                var $dayBlock = $(this).find('.tempoblock-element_day');                var $nightBlock = $(this).find('.tempoblock-element_night');                var dayMax = parseInt($dayBlock.find('.maxDayTempC').text());                var nightMin = parseInt($nightBlock.find('.minNightTempC').text());                var dayMargin = Graph.topBlocksOffset + degreeCoef * (maxDayForecast - dayMax);                if (dayMargin > maxDeltaHeight) {                    dayMargin = maxDeltaHeight;                }                $dayBlock.css('top', baseMarginTop + dayMargin);                var nightMargin = minNightBlockTop - degreeCoef * (nightMin - minNightForecast);                if (dayMargin + heightDayBlock + Graph.minOffsetBetweenDayAndNight > nightMargin) {                    nightMargin = dayMargin + heightDayBlock + Graph.minOffsetBetweenDayAndNight;                }                $nightBlock.css('top', baseMarginTop + nightMargin);            });        },        adjustLines: function() {        }    };	window.setupGraph = function() {        var $firstColumn = $('.tempoblock-column').first();        var graphHeight = $firstColumn.height() - $firstColumn.find('.tempoblock-data').height() - parseInt($firstColumn.find('.tempoblock-data').css('padding-top'))            - $firstColumn.find('.tempoblock-footer').height() - parseInt($firstColumn.find('.tempoblock-footer').css('bottom'));        var marginTop = 5;        var marginBot = 5;        var marginBetween = 5;        var heightDayBlock = $('.tempoblock-element_day').first().height();        var heightNightBlock = $('.tempoblock-element_night').first().height();        var maxDayForecast = -100;        var minNightForecast = +100;        $('.graph .tempoblock-column').each(function() {            var dayMax = parseInt($(this).find('.maxDayTempC').text());            var nightMin = parseInt($(this).find('.minNightTempC').text());            if (maxDayForecast < dayMax) {                maxDayForecast = dayMax;            }            if (minNightForecast > nightMin) {                minNightForecast = nightMin;            }        });        var deltaDegree = maxDayForecast - minNightForecast;        var maxDeltaHeight = graphHeight - marginBetween - marginBot - heightDayBlock - heightNightBlock;        console.info("delta height = " + maxDeltaHeight);        var degreeCoef = maxDeltaHeight / deltaDegree;        console.info("coef = " + degreeCoef);        var baseMarginTop = $firstColumn.find('.tempoblock-data').height() + parseInt($firstColumn.find('.tempoblock-data').css('padding-top'));        // css top of the block with min night temperature        var minNightBlockTop = graphHeight - marginBot - heightNightBlock;        $('.graph .tempoblock-column').each(function() {            var $dayBlock = $(this).find('.tempoblock-element_day');            var $nightBlock = $(this).find('.tempoblock-element_night');            var dayMax = parseInt($dayBlock.find('.maxDayTempC').text());            var nightMin = parseInt($nightBlock.find('.minNightTempC').text());            var dayMargin = marginTop + degreeCoef * (maxDayForecast - dayMax);            if (dayMargin > maxDeltaHeight) {                dayMargin = maxDeltaHeight;            }            $dayBlock.css('top', baseMarginTop + dayMargin);            var nightMargin = minNightBlockTop - degreeCoef * (nightMin - minNightForecast);            if (dayMargin + heightDayBlock + marginBetween > nightMargin) {                nightMargin = dayMargin + heightDayBlock + marginBetween;            }            $nightBlock.css('top', baseMarginTop + nightMargin);        });	};    //$(document).on('.header-search-rezults__value,.header-search-form-examples__link', 'click', function(event) {    /*$(document).on('click', '.header-search-rezults__value', function() {        //alert('dasdasd');        $('.header-search-form__inp').val($(this).html());        $('.header-search-rezults').slideUp(300);        $('.header-search').removeClass('active');        //return false;    });*/});